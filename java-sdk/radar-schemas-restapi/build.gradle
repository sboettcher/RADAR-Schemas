apply plugin: 'com.jfrog.artifactory'

ext.artifactName = 'radar-schemas-restapi'
ext.description = 'RADAR Schemas REST API SDK'

sourceSets {
    main {
        java.srcDir avroOutputDir
    }
}

//---------------------------------------------------------------------------//
// Clean settings                                                            //
//---------------------------------------------------------------------------//
clean {
    delete avroOutputDir
}

//---------------------------------------------------------------------------//
// AVRO file manipulation                                                    //
//---------------------------------------------------------------------------//
task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
    source rootProject.fileTree('../commons') {
        include 'active/questionnaire/questionnaire.avsc'
        include 'monitor/application/application_server_status.avsc'
        include 'catalogue/*.avsc'
    }
    source rootProject.fileTree('../restapi') {
        include '**/*.avsc'
    }
    outputDir avroOutputDir
}
compileJava.dependsOn generateAvro

//---------------------------------------------------------------------------//
// Publishing                                                                //
//---------------------------------------------------------------------------//

publishing {
    publications {
        RadarRestApiPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId project.group
            artifactId artifactName
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', description)
                root.appendNode('name', artifactName)
                root.appendNode('url', githubUrl)
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    override = false
    publications = ['RadarRestApiPublication']
    pkg {
        repo = project.group
        name = artifactName
        userOrg = 'radar-cns'
        licenses = ['Apache-2.0']
        websiteUrl = website
        issueTrackerUrl = issueUrl
        vcsUrl = githubUrl
        githubRepo = githubRepoName
        githubReleaseNotesFile = 'README.md'
        version {
            name = project.version
            desc = description
            vcsTag = System.getenv('TRAVIS_TAG')
            released = new Date()
        }
    }
}

artifactory {
    contextUrl = 'https://oss.jfrog.org/artifactory'
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            username = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
            password = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
            maven = true
        }
    }
}

artifactoryPublish {
    publications('RadarRestApiPublication')
}
